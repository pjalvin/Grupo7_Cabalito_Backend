---
openapi: 3.0.0
info:
  title: Cabalito API
  description: This is an API for Cabalito App
  contact:
    email: cabalitoapp@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://cabalito.com/api
tags:
- name: Seller
  description: Seller user
- name: User
  description: User login in app
- name: Publication
  description: User publications
paths:
  /user/signup:
    post:
      tags:
      - User
      summary: register a new user
      description: |
        register a new user to the DB
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        "201":
          description: Publication created.
        "500":
          description: Internal Error.
        "400":
          description: Bad request.
        "401":
          description: Not authenticated.
        "403":
          description: Access token does not have the required scope.
  /user/login:
    post:
      tags:
      - User
      summary: login in app
      description: |
        login with email and password
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        "201":
          description: Publication created.
        "500":
          description: Internal Error.
        "400":
          description: Bad request.
        "401":
          description: Not authenticated.
        "403":
          description: Access token does not have the required scope.
  /seller:
    put:
      tags:
      - Seller
      summary: edit seller information
      description: |
        You can change some information about your user account
      operationId: editSeller
      parameters:
      - name: idSeller
        in: cookie
        description: post seller id
        required: true
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/body_2'
        required: true
      responses:
        "201":
          description: Seller edited.
        "500":
          description: Internal Error.
        "400":
          description: Bad request.
    post:
      tags:
      - Seller
      summary: register a new seller
      description: |
        register a new user
      operationId: addSeller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_3'
      responses:
        "201":
          description: Publication created.
        "500":
          description: Internal Error.
        "400":
          description: Bad request.
        "401":
          description: Not authenticated.
        "403":
          description: Access token does not have the required scope.
  /seller/{idSeller}:
    get:
      tags:
      - Seller
      summary: get information from an seller
      description: |
        get more information about the seller
      operationId: getSellerById
      parameters:
      - name: idSeller
        in: path
        description: post seller id
        required: true
        style: simple
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body_2'
        "400":
          description: Invalid sellerId value.
  /seller/{idSeller}/image:
    put:
      tags:
      - Seller
      summary: uploads an seller image
      operationId: uploadSellerImage
      parameters:
      - name: idSeller
        in: path
        description: ID of seller to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: successful operation
  /seller/publications:
    get:
      tags:
      - Seller
      summary: Show publication list
      description: |
        By entering into cabalito's app the list of all published vehicles will be deployed
      operationId: sellerPublicationList
      parameters:
      - name: idSeller
        in: cookie
        description: post seller id
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: field
        in: query
        description: List of seller publications in order of the model
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - id_publication
            - id_seller
            - id_door_number
            - id_model
            - id_color
            - id_city
            - license_plate
            - description
            - motor
            - price
            - status
      responses:
        "200":
          description: generate post result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Bad request
        "404":
          description: Not found user
        "500":
          description: Internal server error
  /publications:
    get:
      tags:
      - Publication
      summary: Show publication list
      description: |
        By entering into cabalito's app the list of all published vehicles will be deployed
      operationId: publicationList
      parameters:
      - name: initialId
        in: query
        description: |
          initialId for the list of publications
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: numberRows
        in: query
        description: |
          numberRows for the list of publications
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: idBrand
        in: query
        description: |
          idBrand for search
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: idModel
        in: query
        description: |
          idModel for search
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: idColor
        in: query
        description: |
          idColor for search
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: idDoorNumber
        in: query
        description: |
          idDoorNumber for search
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: idCity
        in: query
        description: |
          idCity for search
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: generate post result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Bad request
        "404":
          description: Not found user
        "500":
          description: Internal server error
    post:
      tags:
      - Publication
      summary: add new publication
      description: |
        By passing the appropriate options, you can add a new publication
      operationId: addPublication
      parameters:
      - name: idSeller
        in: cookie
        description: post seller id
        required: true
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/body_4'
        required: true
      responses:
        "201":
          description: Publication created.
        "500":
          description: Internal Error.
        "400":
          description: Bad request.
  /publications/{idPublication}/image:
    post:
      tags:
      - Publication
      summary: uploads an seller image
      operationId: uploadPublicationImage
      parameters:
      - name: idSeller
        in: cookie
        description: post seller id
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: idPublication
        in: path
        description: post publication id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "201":
          description: Publication image created.
        "500":
          description: Internal Error.
        "400":
          description: Bad request.
    delete:
      tags:
      - Publication
      summary: remove publication image
      description: |
        By selecting the appropriate post you can remove the unwanted image
      operationId: removePublicationImage
      parameters:
      - name: idSeller
        in: cookie
        description: post seller id
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: idPublication
        in: path
        description: Publication ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Deleted publication.
        "500":
          description: Internal Error.
        "400":
          description: Bad request.
  /publications/{idPublication}:
    get:
      tags:
      - Publication
      summary: See detail of a vehicle
      description: "By clicking in the publication, the user will be able to see all details \nof the publication\n"
      operationId: get publication details
      parameters:
      - name: idPublication
        in: path
        description: Publication ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Viewing Successful Post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body_4'
        "500":
          description: Internal server error
    put:
      tags:
      - Publication
      summary: edit publication
      description: |
        By passing the appropriate options, you can edit a publication
      operationId: editPublication
      parameters:
      - name: idSeller
        in: cookie
        description: post seller id
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: idPublication
        in: path
        description: Publication ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/body_5'
        required: true
      responses:
        "201":
          description: Modified publication.
        "500":
          description: Internal Error.
        "400":
          description: Bad request.
    delete:
      tags:
      - Publication
      summary: remove publication
      description: |
        By passing the appropriate options, you can remove a publication
      operationId: removePublication
      parameters:
      - name: idSeller
        in: cookie
        description: post seller id
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: idPublication
        in: path
        description: Publication ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Deleted publication.
        "500":
          description: Internal Error.
        "400":
          description: Bad request.
  /publications/colors:
    get:
      tags:
      - Publication
      summary: See color list
      description: the list of vehicle colors in the publication
      operationId: getColors
      parameters:
      - name: field
        in: query
        description: List of colors
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - id_color
            - color
            - status
      responses:
        "200":
          description: Viewing Successful Post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "500":
          description: Internal server error
  /publications/brands:
    get:
      tags:
      - Publication
      summary: See brand list
      description: the list of vehicle brand in the publication
      operationId: getBrands
      parameters:
      - name: field
        in: query
        description: List of brands
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - id_brand
            - brand
            - status
      responses:
        "200":
          description: Viewing Successful Post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "500":
          description: Internal server error
  /publications/models:
    get:
      tags:
      - Publication
      summary: See model list
      description: the list of vehicle models in the publication
      operationId: getModels
      parameters:
      - name: field
        in: query
        description: List of models
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - id_model
            - model
            - status
      responses:
        "200":
          description: Viewing Successful Post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "500":
          description: Internal server error
components:
  schemas:
    login:
      required:
      - email
      - first_name
      - id_user
      - last_name
      - password
      - status
      type: object
      properties:
        id_user:
          type: integer
          example: 1
        email:
          type: string
          example: pepito@gmail.com
        password:
          type: string
          example: hola12345
        first_name:
          type: string
          example: Pepito
        last_name:
          type: string
          example: Perez Mamani
        status:
          type: boolean
          example: false
    User:
      required:
      - email
      - first_name
      - id_seller
      - last_name
      - password
      - phone_number
      - status
      type: object
      properties:
        id_seller:
          type: integer
          example: 1
        email:
          type: string
          example: pepito@gmail.com
        password:
          type: string
          example: hola12345
        first_name:
          type: string
          example: Pepito
        last_name:
          type: string
          example: Perez Mamani
        phone_number:
          type: string
          example: "74563224"
        status:
          type: boolean
          example: false
    Publication:
      required:
      - description
      - id_brand
      - id_city
      - id_color
      - id_door_number
      - id_model
      - id_publication
      - id_seller
      - images
      - license_plate
      - price
      - status
      type: object
      properties:
        id_publication:
          type: integer
          example: 5
        id_seller:
          $ref: '#/components/schemas/User'
        id_color:
          type: integer
          example: 4
        id_door_number:
          type: integer
          example: 4
        id_model:
          type: integer
          example: 1
        id_brand:
          type: integer
          example: 5
        id_city:
          type: integer
          example: 2
        license_plate:
          type: string
          example: 5DF2D2
        description:
          type: string
          example: Luces delanteras destruidas
        motor:
          type: string
          example: BM350
        price:
          type: integer
          example: 9000
        image:
          $ref: '#/components/schemas/ImagePublication'
        status:
          type: boolean
          example: false
    SellerPublication:
      required:
      - description
      - id_brand
      - id_city
      - id_color
      - id_door_number
      - id_model
      - id_publication
      - id_seller
      - license_plate
      - price
      - status
      type: object
      properties:
        id_publication:
          type: integer
          example: 5
        id_seller:
          $ref: '#/components/schemas/User'
        id_door_number:
          $ref: '#/components/schemas/DoorNumber'
        id_model:
          $ref: '#/components/schemas/Model'
        id_brand:
          $ref: '#/components/schemas/Brand'
        id_color:
          $ref: '#/components/schemas/Color'
        id_city:
          $ref: '#/components/schemas/City'
        license_plate:
          type: string
          example: 5DF2D2
        description:
          type: string
          example: Luces delanteras destruidas
        motor:
          type: string
          example: BM350
        price:
          type: integer
          example: 9000
        status:
          type: boolean
          example: false
    ImagePublication:
      required:
      - id_image_publication
      - id_publication
      - path
      - status
      type: object
      properties:
        id_image_publication:
          type: integer
          example: 10
        path:
          type: string
          format: url
          example: https://www.acme-corp.com
        id_publication:
          type: integer
          example: 5
        status:
          type: boolean
          example: false
    City:
      required:
      - city
      - id_city
      - status
      type: object
      properties:
        id_city:
          type: integer
          example: 2
        city:
          type: string
          example: La Paz
        status:
          type: boolean
          example: false
    Brand:
      required:
      - brand
      - id_brand
      - status
      type: object
      properties:
        id_brand:
          type: integer
          example: 5
        brand:
          type: string
          example: La Paz
        status:
          type: boolean
          example: false
    Model:
      required:
      - id_model
      - model
      - status
      type: object
      properties:
        id_model:
          type: integer
          example: 1
        model:
          type: string
          example: La Paz
        status:
          type: boolean
          example: false
    Color:
      required:
      - color
      - id_color
      - status
      type: object
      properties:
        id_color:
          type: integer
          example: 4
        color:
          type: string
          example: Rojo
        status:
          type: boolean
          example: false
    DoorNumber:
      required:
      - door_number
      - id_door_number
      - status
      type: object
      properties:
        id_door_number:
          type: integer
          example: 4
        door_number:
          type: string
          example: ABC 327
        status:
          type: boolean
          example: false
    body:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/login'
    body_1:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/login'
    body_2:
      type: object
      properties:
        seller:
          $ref: '#/components/schemas/User'
    body_3:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
    inline_response_200:
      type: object
      properties:
        publications:
          type: array
          items:
            $ref: '#/components/schemas/SellerPublication'
    inline_response_200_1:
      type: object
      properties:
        publications:
          type: array
          items:
            $ref: '#/components/schemas/Publication'
        colors:
          type: array
          items:
            $ref: '#/components/schemas/Color'
        doorNumbers:
          type: array
          items:
            $ref: '#/components/schemas/DoorNumber'
        models:
          type: array
          items:
            $ref: '#/components/schemas/Model'
        brands:
          type: array
          items:
            $ref: '#/components/schemas/Brand'
        citys:
          type: array
          items:
            $ref: '#/components/schemas/City'
        totalRecords:
          type: number
          example: 5
    body_4:
      type: object
      properties:
        publication:
          $ref: '#/components/schemas/Publication'
    body_5:
      type: object
      properties:
        publication:
          $ref: '#/components/schemas/Publication'
    inline_response_200_2:
      type: object
      properties:
        publication:
          $ref: '#/components/schemas/Color'
